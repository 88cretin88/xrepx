extern bool cppISteamNetworking_SteamNetworking006_SendP2PPacket(void *, CSteamID, const void *, uint32, EP2PSend, int);
extern bool cppISteamNetworking_SteamNetworking006_IsP2PPacketAvailable(void *, uint32 *, int);
extern bool cppISteamNetworking_SteamNetworking006_ReadP2PPacket(void *, void *, uint32, uint32 *, CSteamID *, int);
extern bool cppISteamNetworking_SteamNetworking006_AcceptP2PSessionWithUser(void *, CSteamID);
extern bool cppISteamNetworking_SteamNetworking006_CloseP2PSessionWithUser(void *, CSteamID);
extern bool cppISteamNetworking_SteamNetworking006_CloseP2PChannelWithUser(void *, CSteamID, int);
extern bool cppISteamNetworking_SteamNetworking006_GetP2PSessionState(void *, CSteamID, P2PSessionState_t *);
extern bool cppISteamNetworking_SteamNetworking006_AllowP2PPacketRelay(void *, bool);
extern SNetListenSocket_t cppISteamNetworking_SteamNetworking006_CreateListenSocket(void *, int, SteamIPAddress_t, uint16, bool);
extern SNetSocket_t cppISteamNetworking_SteamNetworking006_CreateP2PConnectionSocket(void *, CSteamID, int, int, bool);
extern SNetSocket_t cppISteamNetworking_SteamNetworking006_CreateConnectionSocket(void *, SteamIPAddress_t, uint16, int);
extern bool cppISteamNetworking_SteamNetworking006_DestroySocket(void *, SNetSocket_t, bool);
extern bool cppISteamNetworking_SteamNetworking006_DestroyListenSocket(void *, SNetListenSocket_t, bool);
extern bool cppISteamNetworking_SteamNetworking006_SendDataOnSocket(void *, SNetSocket_t, void *, uint32, bool);
extern bool cppISteamNetworking_SteamNetworking006_IsDataAvailableOnSocket(void *, SNetSocket_t, uint32 *);
extern bool cppISteamNetworking_SteamNetworking006_RetrieveDataFromSocket(void *, SNetSocket_t, void *, uint32, uint32 *);
extern bool cppISteamNetworking_SteamNetworking006_IsDataAvailable(void *, SNetListenSocket_t, uint32 *, SNetSocket_t *);
extern bool cppISteamNetworking_SteamNetworking006_RetrieveData(void *, SNetListenSocket_t, void *, uint32, uint32 *, SNetSocket_t *);
extern bool cppISteamNetworking_SteamNetworking006_GetSocketInfo(void *, SNetSocket_t, CSteamID *, int *, SteamIPAddress_t *, uint16 *);
extern bool cppISteamNetworking_SteamNetworking006_GetListenSocketInfo(void *, SNetListenSocket_t, SteamIPAddress_t *, uint16 *);
extern ESNetSocketConnectionType cppISteamNetworking_SteamNetworking006_GetSocketConnectionType(void *, SNetSocket_t);
extern int cppISteamNetworking_SteamNetworking006_GetMaxPacketSize(void *, SNetSocket_t);
